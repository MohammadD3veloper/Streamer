- name: Hosts Available
  hosts: {{ ansible_env.HOST_SERVER }}
  become: true
  become_user: {{ ansible_env.USER_SERVER }}
  vars:
    services_to_start:
      - jenkins
      - docker
    packages_to_install:
      - python3-pip
      - python3-virtualenv
      - docker-compose
  tasks:
    - name: Update and upgrade system packages
      ansible.builtin.apt:
        name: aptitude
        state: present
        update_cache: true

    - name: Installing required packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      with_items: "{{ packages_to_install }}"

    - name: Add Docker GPG apt key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      ansible.builtin.apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update Repository and install docker-ce
      ansible.builtin.apt:
        name: docker-ce
        state: present
        update_cache: true

    - name: Installing jdk-11
      ansible.builtin.apt:
        name: openjdk-11-jdk
        state: present

    - name: Add jenkins GPG apt key
      ansible.builtin.apt_key:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        state: present

    - name: Add jenkins to Repository
      ansible.builtin.apt_repository:
        repo: deb https://pkg.jenkins.io/debian-stable binary/
        state: present

    - name: Install jenkins
      ansible.builtin.apt:
        name: jenkins
        state: present

    - name: Add Jenkins to root group
      ansible.builtin.shell: usermod -a -G root jenkins && usermod -a -G docker jenkins

    - name: Start jenkins and docker services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
      with_items: "{{ services_to_start }}"

    - name: Getting password of jenkins
      ansible.builtin.shell: |
        #!/bin/bash
        if [ -f /var/lib/jenkins/secrets/initialAdminPassword ]; then
          cat /var/lib/jenkins/secrets/initialAdminPassword
        else
          echo Jenkins intial password has been used
        fi
      register: password

    - name: Add jenkins user
      ansible.builtin.user:
        name: jenkins
        password: '$6$IDgc1fk6/yoeU0pc$j31/tEQCXtb8K4YblWZ0EicIB9Te4yKzvxKqEwIMk/muwhX/D2.uBLLZL9ZPS6uzSRLNbMN.o9dT4d./m9HdQ0'
        groups:
          - docker
          - sudo
        state: present

    - name: Log into DockerHub with jenkins user
      community.docker.docker_login:
        username: {{ ansible_env.DOCKER_USERNAME }}
        password: {{ ansible_env.DOCKER_PASSWORD }}
      become: true
      become_user: jenkins

    - name: Show output
      ansible.builtin.debug:
        var: password.stdout_lines

    - name: Install k3s and helm and prometheus
      ansible.builtin.shell: |
        #!/bin/bash
        # Install k3s
        curl -sfL https://get.k3s.io -o k3s.sh
        chmod +x k3s.sh && ./k3s.sh
        # configuring k3s
        mkdir $HOME/.kube
        sudo cp /etc/rancher/k3s/k3s.yml $HOME/.kube/config
        sudo chmod 644 $HOME/.kube/config
      become: true
      become_user: jenkins
